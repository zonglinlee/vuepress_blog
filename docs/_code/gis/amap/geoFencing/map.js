// 银川金凤区轮廓坐标 https://datav.aliyun.com/portal/school/atlas/area_selector
const coor = [
  [106.222563, 38.642012],
  [106.217562, 38.630627],
  [106.21552, 38.62575],
  [106.211728, 38.616888],
  [106.207487, 38.60686],
  [106.204079, 38.598932],
  [106.202277, 38.594827],
  [106.200471, 38.59055],
  [106.198685, 38.58647],
  [106.196802, 38.58234],
  [106.194829, 38.574595],
  [106.193713, 38.57035],
  [106.192427, 38.565279],
  [106.191143, 38.560369],
  [106.186539, 38.542423],
  [106.186044, 38.540931],
  [106.186068, 38.540601],
  [106.184816, 38.535769],
  [106.182988, 38.528313],
  [106.182642, 38.527681],
  [106.182473, 38.526379],
  [106.179673, 38.515865],
  [106.177201, 38.506361],
  [106.176394, 38.503479],
  [106.175192, 38.498848],
  [106.174229, 38.494799],
  [106.172806, 38.489411],
  [106.172009, 38.486068],
  [106.171621, 38.485124],
  [106.171623, 38.484618],
  [106.17101, 38.481778],
  [106.1703, 38.479394],
  [106.169746, 38.478173],
  [106.167888, 38.475412],
  [106.166583, 38.473634],
  [106.16325, 38.468762],
  [106.163169, 38.468499],
  [106.160752, 38.465163],
  [106.156133, 38.458462],
  [106.154003, 38.455524],
  [106.151711, 38.452187],
  [106.150678, 38.450811],
  [106.149085, 38.448261],
  [106.146726, 38.444967],
  [106.144191, 38.44117],
  [106.142734, 38.439151],
  [106.13742, 38.431545],
  [106.133413, 38.425641],
  [106.132053, 38.423751],
  [106.12954, 38.420093],
  [106.126838, 38.416072],
  [106.125955, 38.414893],
  [106.121307, 38.408158],
  [106.119773, 38.406063],
  [106.115498, 38.399715],
  [106.114183, 38.397835],
  [106.112735, 38.39561],
  [106.107343, 38.387831],
  [106.10566, 38.385462],
  [106.09935, 38.376254],
  [106.094007, 38.368616],
  [106.089534, 38.362128],
  [106.088179, 38.360057],
  [106.086601, 38.357856],
  [106.08369, 38.35359],
  [106.079055, 38.346957],
  [106.07824, 38.345655],
  [106.073118, 38.338259],
  [106.071413, 38.335715],
  [106.069916, 38.334053],
  [106.069577, 38.333481],
  [106.06647, 38.329164],
  [106.064752, 38.326595],
  [106.063147, 38.324328],
  [106.06124, 38.32151],
  [106.057886, 38.316724],
  [106.055149, 38.312712],
  [106.065974, 38.30794],
  [106.067825, 38.307198],
  [106.068676, 38.306007],
  [106.069857, 38.303916],
  [106.071248, 38.301216],
  [106.071741, 38.300025],
  [106.072657, 38.298538],
  [106.075705, 38.29401],
  [106.078017, 38.290432],
  [106.079867, 38.287717],
  [106.081241, 38.285543],
  [106.083018, 38.282878],
  [106.110708, 38.327037],
  [106.132618, 38.318304],
  [106.168016, 38.365239],
  [106.172401, 38.388643],
  [106.212096, 38.393888],
  [106.215463, 38.406031],
  [106.217915, 38.405883],
  [106.225326, 38.40309],
  [106.225822, 38.403087],
  [106.226359, 38.405175],
  [106.228043, 38.406282],
  [106.229864, 38.406839],
  [106.233759, 38.406613],
  [106.235459, 38.40483],
  [106.237513, 38.405204],
  [106.244814, 38.409801],
  [106.263394, 38.407508],
  [106.269328, 38.407964],
  [106.269588, 38.408388],
  [106.273041, 38.412712],
  [106.274099, 38.414401],
  [106.275638, 38.419062],
  [106.275967, 38.420701],
  [106.275689, 38.421832],
  [106.269677, 38.429299],
  [106.268415, 38.43139],
  [106.267797, 38.432964],
  [106.266462, 38.43596],
  [106.264999, 38.437825],
  [106.263134, 38.439711],
  [106.262226, 38.440796],
  [106.261924, 38.44145],
  [106.261458, 38.444604],
  [106.261424, 38.446339],
  [106.259644, 38.450732],
  [106.258812, 38.452521],
  [106.258447, 38.45445],
  [106.25828, 38.455919],
  [106.257819, 38.457815],
  [106.256891, 38.460918],
  [106.255742, 38.465634],
  [106.255369, 38.466733],
  [106.253676, 38.469009],
  [106.25305, 38.470521],
  [106.253183, 38.47404],
  [106.25304, 38.475753],
  [106.252991, 38.481706],
  [106.253254, 38.483562],
  [106.25531, 38.487856],
  [106.255966, 38.488872],
  [106.259333, 38.496049],
  [106.261762, 38.501038],
  [106.262813, 38.503569],
  [106.264481, 38.506401],
  [106.265667, 38.507445],
  [106.26671, 38.507912],
  [106.268376, 38.508421],
  [106.273022, 38.510427],
  [106.276899, 38.512007],
  [106.278678, 38.512796],
  [106.283425, 38.515979],
  [106.285344, 38.517515],
  [106.287093, 38.519299],
  [106.289076, 38.521527],
  [106.290632, 38.523397],
  [106.292107, 38.52475],
  [106.294171, 38.527118],
  [106.296669, 38.529328],
  [106.298996, 38.531721],
  [106.299364, 38.532414],
  [106.299651, 38.534032],
  [106.299744, 38.536052],
  [106.300557, 38.543833],
  [106.300488, 38.546951],
  [106.300206, 38.552751],
  [106.300088, 38.553594],
  [106.298692, 38.556772],
  [106.295538, 38.563633],
  [106.292414, 38.570583],
  [106.289133, 38.577718],
  [106.286924, 38.582358],
  [106.286433, 38.58314],
  [106.283938, 38.588948],
  [106.282755, 38.590575],
  [106.281898, 38.591364],
  [106.280485, 38.592354],
  [106.273535, 38.596415],
  [106.25853, 38.605659],
  [106.246677, 38.612942],
  [106.242363, 38.615619],
  [106.237454, 38.618712],
  [106.236399, 38.619207],
  [106.234063, 38.620633],
  [106.233548, 38.621178],
  [106.231663, 38.625008],
  [106.223896, 38.639433],
  [106.222563, 38.642012],
]
// 这个坐标需要拷贝一份， new AMap.Polyline 方法会更改当前 coor 数据
const coorCopy = JSON.parse(JSON.stringify(coor))
const map = new AMap.Map('map-container', {
  zoom: 11, //级别
  center: [106.22299699636461, 38.439581486097275], //中心点坐标
  viewMode: '3D', //使用3D视图
  layers: [
    //使用多个图层
    // new AMap.TileLayer.Satellite(),
    // new AMap.TileLayer.RoadNet()
  ],
})

// 创建一个 Marker 实例：
const workPlaceMarker = new AMap.Marker({
  position: new AMap.LngLat(106.22299699636461, 38.439581486097275), // 经纬度对象，也可以是经纬度构成的一维数组[116.39, 39.9]
  title: '育成中心',
})
map.add(workPlaceMarker)

//创建信息窗体
const infoWindow = new AMap.InfoWindow({
  isCustom: true,
  content:
    '<div style="background: black;width: 100px;text-align: center;color: white;padding: 6px;border-radius: 2px;">育成中心</div>',
  offset: new AMap.Pixel(16, -45),
})
const onMarkerClick = function (e) {
  //e.target就是被点击的Marker
  infoWindow.open(map, e.target.getPosition()) //打开信息窗体
}
workPlaceMarker.on('click', onMarkerClick)

// 画一个多边形（金凤区轮廓）
const polyline = new AMap.Polyline({
  path: coor,
  strokeColor: 'red',
})
map.add(polyline)

// 设置点击事件，用于验证地理围栏算法
map.on('click', function (e) {
  alert(isPtInPoly(e.lnglat.getLng(), e.lnglat.getLat(), coorCopy))
})

// 地理围栏算法解析（Geo-fencing）参考以下：
// https://www.jianshu.com/p/6044dd1020a2
// https://juejin.cn/post/6937940742388056095
function isPtInPoly(ALon, ALat, APoints) {
  let iSum = 0,
    iCount
  let dLon1, dLon2, dLat1, dLat2, dLon
  if (APoints.length < 3) {
    return false
  }
  iCount = APoints.length
  for (let i = 0; i < iCount; i++) {
    if (i == iCount - 1) {
      dLon1 = APoints[i][0]
      dLat1 = APoints[i][1]
      dLon2 = APoints[0][0]
      dLat2 = APoints[0][1]
    } else {
      dLon1 = APoints[i][0]
      dLat1 = APoints[i][1]
      dLon2 = APoints[i + 1][0]
      dLat2 = APoints[i + 1][1]
    }
    //以下语句判断A点是否在边的两端点的水平平行线之间，在则可能有交点，开始判断交点是否在左射线上
    if ((ALat >= dLat1 && ALat < dLat2) || (ALat >= dLat2 && ALat < dLat1)) {
      if (Math.abs(dLat1 - dLat2) > 0) {
        //得到 A点向左射线与边的交点的x坐标：
        dLon = dLon1 - ((dLon1 - dLon2) * (dLat1 - ALat)) / (dLat1 - dLat2)
        if (dLon < ALon) iSum++
      }
    }
  }
  if (iSum % 2 != 0) {
    return true
  }
  return false
}
