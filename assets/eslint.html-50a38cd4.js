import{_ as i,r as l,o,c as r,a as n,b as e,d as a,e as t}from"./app-4d1d3ef4.js";const p={},c=n("h2",{id:"eslint-in-vue",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#eslint-in-vue","aria-hidden":"true"},"#"),e(" eslint in vue")],-1),u={href:"https://eslint.vuejs.org/",target:"_blank",rel:"noopener noreferrer"},d=n("p",null,[e("This plugin allows us to check the "),n("code",null,"<template>"),e(" and "),n("code",null,"<script>"),e(" of .vue files with ESLint, as well as Vue code in "),n("strong",null,".js"),e(" files.")],-1),k=n("p",null,[e("plugins插件 ESLint虽然可以定义很多的 rules，以及通过extends来引入更多的规则，但是说到底只是检查JS语法。如果需要检查Vue中的template或者React中的jsx，就束手无策了。所以引入插件的目的就是为了增强ESLint的检查能力和范围。 在配置文件里配置插件时，可以使用 "),n("code",null,"plugins"),e(" 关键字来存放插件名字的列表。插件名称可以省略 "),n("code",null,"eslint-plugin-"),e(" 前缀。")],-1),v={href:"https://www.npmjs.com/package/@vue/cli-plugin-eslint",target:"_blank",rel:"noopener noreferrer"},m=n("p",null,[e("eslint plugin for vue-cli, Injected Commands: "),n("code",null,"vue-cli-service lint")],-1),h={href:"https://www.npmjs.com/package/babel-eslint",target:"_blank",rel:"noopener noreferrer"},b=n("p",null,[n("strong",null,"babel-eslint"),e(" is now "),n("strong",null,"@babel/eslint-parser"),e(". babel-eslint allows you to lint ALL valid Babel code with the fantastic ESLint.You only need to use babel-eslint if you are using types (Flow) or experimental features not supported in ESLint itself yet. Otherwise try the default parser (you don't have to use it just because you are using Babel).")],-1),g=n("p",null,"ESLint allows custom parsers. This is great but some of the syntax nodes that Babel supports aren't supported by ESLint. When using this plugin, ESLint is monkeypatched and your code is transformed into code that ESLint can understand.",-1),_={href:"https://github.com/prettier/eslint-plugin-prettier",target:"_blank",rel:"noopener noreferrer"},f=n("p",null,"Runs Prettier as an ESLint rule and reports differences as individual ESLint issues.",-1),y={href:"https://github.com/prettier/eslint-config-prettier",target:"_blank",rel:"noopener noreferrer"},w=t('<p>Turns off all rules that are unnecessary or might conflict with Prettier.</p><h2 id="webstorm-eslint-error" tabindex="-1"><a class="header-anchor" href="#webstorm-eslint-error" aria-hidden="true">#</a> webstorm eslint error</h2><blockquote><p>ESLint: Please specify path to &#39;eslint&#39; package</p></blockquote><p>tried to install eslint globally and restart your IDE : <code>npm install --g eslint</code></p><blockquote><p>Error while loading rule &#39;prettier/prettier&#39;</p></blockquote><p>try upgrade eslint</p><blockquote><p>Why do I keep getting Delete &#39;cr&#39; <code>[prettier/prettier]</code>?</p></blockquote>',7),x=n("code",null,'"endOfLine":"auto"',-1),q=n("code",null,".prettierrc",-1),j=n("code",null,".prettierrc.json",-1),S={href:"https://stackoverflow.com/questions/53516594/why-do-i-keep-getting-delete-cr-prettier-prettier",target:"_blank",rel:"noopener noreferrer"},L={id:"prettier",tabindex:"-1"},E=n("a",{class:"header-anchor",href:"#prettier","aria-hidden":"true"},"#",-1),z={href:"https://www.jetbrains.com/help/webstorm/prettier.html",target:"_blank",rel:"noopener noreferrer"},P=t('<ul><li>webstorm plugins market: install prettier</li><li>workspace: <code>npm install --save-dev --save-exact prettier</code> or <code>npm install --global prettier</code></li><li>Settings/Preferences dialog (Ctrl+Alt+S), go to Languages &amp; Frameworks | JavaScript | Prettier, select <code>prettier</code> installation</li><li>Reformat code with Prettier: press <code>Ctrl+Alt+Shift+P</code></li><li>Set Prettier as default formatter : go to Languages &amp; Frameworks | JavaScript | Prettier, and select the <code>On code reformat</code> checkbox.</li></ul><h2 id="git-integration" tabindex="-1"><a class="header-anchor" href="#git-integration" aria-hidden="true">#</a> git integration</h2>',2),B={href:"https://github.com/typicode/husky",target:"_blank",rel:"noopener noreferrer"},V=n("p",null,[e("Modern native Git hooks made easy, "),n("code",null,"npm install husky -D")],-1),T={href:"https://github.com/okonet/lint-staged",target:"_blank",rel:"noopener noreferrer"},A=t(`<p>Run linters against <strong>staged git files</strong> and don&#39;t let 💩 slip into your code base</p><p><code>npm install -D lint-staged</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># package.json</span>
  <span class="token string">&quot;husky&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">{</span>
    <span class="token string">&quot;hooks&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">{</span>
      <span class="token string">&quot;pre-commit&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;lint-staged&quot;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>,
  <span class="token string">&quot;lint-staged&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">{</span>
    <span class="token string">&quot;*.{js,jsx}&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">[</span>
      <span class="token string">&quot;prettier --write&quot;</span>,
      <span class="token string">&quot;eslint --fix&quot;</span>,
      <span class="token string">&quot;git add&quot;</span>
    <span class="token punctuation">]</span>,
    <span class="token string">&quot;*.{html,css,less,ejs}&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">[</span>
      <span class="token string">&quot;prettier --write&quot;</span>,
      <span class="token string">&quot;git add&quot;</span>
    <span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="files-related-to-prettier-eslint" tabindex="-1"><a class="header-anchor" href="#files-related-to-prettier-eslint" aria-hidden="true">#</a> files related to prettier &amp;&amp; eslint</h2><p>eslintrc.js</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">env</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">browser</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        <span class="token literal-property property">node</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        <span class="token literal-property property">es6</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token keyword">extends</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token string">&#39;eslint:recommended&#39;</span><span class="token punctuation">,</span>
        <span class="token string">&#39;plugin:vue/essential&#39;</span><span class="token punctuation">,</span>
        <span class="token string">&#39;plugin:prettier/recommended&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token literal-property property">globals</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">Atomics</span><span class="token operator">:</span> <span class="token string">&#39;readonly&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">SharedArrayBuffer</span><span class="token operator">:</span> <span class="token string">&#39;readonly&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">parserOptions</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">ecmaVersion</span><span class="token operator">:</span> <span class="token number">2020</span><span class="token punctuation">,</span>
        <span class="token literal-property property">sourceType</span><span class="token operator">:</span> <span class="token string">&#39;module&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;vue&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token string-property property">&#39;vue/multi-word-component-names&#39;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;warn&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>.eslintignore</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>src/views/pureHtml/**
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>.prettierignore</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>.github
public
dist
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>prettier.config.js</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">trailingComma</span><span class="token operator">:</span> <span class="token string">&#39;es5&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">tabWidth</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span>
    <span class="token literal-property property">semi</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token literal-property property">singleQuote</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token literal-property property">endOfLine</span><span class="token operator">:</span> <span class="token string">&#39;auto&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,12),C={id:"git-规范-commitizen",tabindex:"-1"},I=n("a",{class:"header-anchor",href:"#git-规范-commitizen","aria-hidden":"true"},"#",-1),O={href:"https://github.com/commitizen/cz-cli",target:"_blank",rel:"noopener noreferrer"},R=t(`<p>使用 <code>cz</code> 命令代替 <code>git commi</code>t</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">-g</span> commitizen
commitizen init cz-conventional-changelog --save-dev --save-exact
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="reference" tabindex="-1"><a class="header-anchor" href="#reference" aria-hidden="true">#</a> Reference</h2>`,3),D={href:"https://juejin.cn/post/6990929456382607374",target:"_blank",rel:"noopener noreferrer"},N={href:"https://github.com/zonglinlee/vue2-practice",target:"_blank",rel:"noopener noreferrer"};function F(J,W){const s=l("ExternalLinkIcon");return o(),r("div",null,[c,n("ul",null,[n("li",null,[n("a",u,[e("eslint-plugin-vue"),a(s)])])]),d,k,n("ul",null,[n("li",null,[n("a",v,[e("@vue/cli-plugin-eslint"),a(s)])])]),m,n("ul",null,[n("li",null,[n("a",h,[e("babel-eslint"),a(s)])])]),b,g,n("ul",null,[n("li",null,[n("a",_,[e("eslint-plugin-prettier"),a(s)])])]),f,n("ul",null,[n("li",null,[n("a",y,[e("eslint-config-prettier"),a(s)])])]),w,n("p",null,[e("Try setting the "),x,e(" in your "),q,e(" (or "),j,e(") file (inside the object) "),n("a",S,[e("stackoverflow"),a(s)])]),n("h2",L,[E,e(),n("a",z,[e("prettier"),a(s)])]),P,n("ul",null,[n("li",null,[n("a",B,[e("husky-哈士奇"),a(s)])])]),V,n("ul",null,[n("li",null,[n("a",T,[e("lint-staged"),a(s)])])]),A,n("h3",C,[I,e(),n("a",O,[e("git 规范 commitizen"),a(s)])]),R,n("p",null,[n("a",D,[e("eslint和prettier"),a(s)]),n("a",N,[e("github-example"),a(s)])])])}const H=i(p,[["render",F],["__file","/home/runner/work/vuepress_blog/vuepress_blog/docs/.vuepress/.temp/pages/others/eslint.html.vue"]]);export{H as default};
