import{_ as o,r as i,o as r,c as l,a as e,b as n,d as a,e as t}from"./app-4d1d3ef4.js";const c="/vuepress_blog/assets/v2rayN-11f46d22.png",d="/vuepress_blog/assets/webstormProxy-f5716422.png",p="/vuepress_blog/assets/webstorm_debug-1e5c583d.png",u="/vuepress_blog/assets/cygwin-8dffac0d.png",h={},m=e("h2",{id:"v2rayn代理软件设置",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#v2rayn代理软件设置","aria-hidden":"true"},"#"),n(" V2rayN代理软件设置")],-1),b={href:"https://www.duyaoss.com/",target:"_blank",rel:"noopener noreferrer"},g=e("br",null,null,-1),v=e("a",{href:"https://github.com/v2ray/v2ray-core"},"https://github.com/v2ray/v2ray-core",-1),_=t('<p><img src="'+c+`" alt="v2rayN端口设置"></p><h2 id="vscode-debug" tabindex="-1"><a class="header-anchor" href="#vscode-debug" aria-hidden="true">#</a> vscode debug</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> run start <span class="token comment"># app launch at: http://localhost:8000</span>
<span class="token comment"># open Run and debug panel</span>
<span class="token comment"># add configuration: Chrome Launch</span>
<span class="token punctuation">{</span>
      <span class="token string">&quot;name&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;Launch Chrome&quot;</span>,
      <span class="token string">&quot;request&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;launch&quot;</span>,
      <span class="token string">&quot;type&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;chrome&quot;</span>,
      <span class="token string">&quot;url&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;http://localhost:8000&quot;</span>,
      <span class="token string">&quot;webRoot&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;<span class="token variable">\${workspaceFolder}</span>&quot;</span>
<span class="token punctuation">}</span>
<span class="token comment"># click &#39;start debugging&#39; button start debug </span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="webstorm-配置" tabindex="-1"><a class="header-anchor" href="#webstorm-配置" aria-hidden="true">#</a> webstorm 配置</h2><h3 id="软件破解" tabindex="-1"><a class="header-anchor" href="#软件破解" aria-hidden="true">#</a> 软件破解</h3><h4 id="webstorm-2021-3-版本激活教程" tabindex="-1"><a class="header-anchor" href="#webstorm-2021-3-版本激活教程" aria-hidden="true">#</a> webstorm 2021.3 版本激活教程</h4><p>注意不是2021.3.1版本：<a href="https://www.bilibili.com/read/cv14405690">https://www.bilibili.com/read/cv14405690</a></p>`,7),f={id:"jetbrains-2021-3-x、2021-2-x、2021-1-x等-版本激活教程",tabindex:"-1"},k=e("a",{class:"header-anchor",href:"#jetbrains-2021-3-x、2021-2-x、2021-1-x等-版本激活教程","aria-hidden":"true"},"#",-1),w={href:"https://www.yuque.com/u12033157/dqgh2a/hc2eba",target:"_blank",rel:"noopener noreferrer"},x=t('<p>注意：webstorm 2021.3.1版本之后需要登陆账号才可以试用，而且绑定账号，试用期结束后无法再次试用</p><h4 id="webstorm代理设置" tabindex="-1"><a class="header-anchor" href="#webstorm代理设置" aria-hidden="true">#</a> webstorm代理设置</h4><p>ieda中插件市场下载太慢，v2rayN全局代理不生效，需要给idea配置代理，打开idea Settings- System Settings - http proxy</p><p><img src="'+d+'" alt="webstorm代理设置"></p><h4 id="webstorm-常用插件" tabindex="-1"><a class="header-anchor" href="#webstorm-常用插件" aria-hidden="true">#</a> webstorm 常用插件</h4>',5),y=e("li",null,"theme： settings-plugin - (one Dark theme)",-1),q={href:"https://docs.emmet.io/abbreviations/syntax/",target:"_blank",rel:"noopener noreferrer"},N=e("li",null,"Database Navigator （数据库连接插件）",-1),j=e("li",null,".env files support",-1),S=e("li",null,"statistic (统计项目代码)",-1),C=e("li",null,"camelCase (驼峰命名和下划线命名转换 shift + alt + u / ctrl + shift + u)",-1),L=e("li",null,"rainbow bracket",-1),F=t('<h4 id="idea-常用插件" tabindex="-1"><a class="header-anchor" href="#idea-常用插件" aria-hidden="true">#</a> IDEA 常用插件</h4><ul><li>maven helper: 用来分析 pom.xml 文件中的依赖关系</li></ul><h4 id="webstorm常见问题" tabindex="-1"><a class="header-anchor" href="#webstorm常见问题" aria-hidden="true">#</a> webstorm常见问题</h4><ul><li><code>tailwindcss</code> 不能智能提示</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>需要升级到 webstorm 2021.3.1以后才可以智能提示\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>webstorm <code>ctrl + tab</code> 键不显示 npm工具栏</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>在 `package.json` 上点击右键，然后选择 `show npm scripts` 选项即可，\n会发现左下角侧边栏上出现了一个 npm 的按钮\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>webstorm 光标变粗解决方案</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>应该是不小心按了键盘上的 insert 键，再按下切换回来就可以\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>webstorm 不能识别 vue项目中 alias 路径</li></ul><p>在 WebStorm <code>Setting -&gt; Language &amp; Framework -&gt; JavaScript -&gt; Webpack</code> 由 <code>auto -&gt; manual -&gt; auto</code>,切换一下，<code>webstorm</code> 就会自行 <code>analyze</code></p>',11),P={href:"https://blog.csdn.net/KaiSarH/article/details/105035307",target:"_blank",rel:"noopener noreferrer"},V=e("p",null,[n("在 WebStorm "),e("code",null,"Setting -> Language & Framework -> JavaScript -> library"),n(" 中 "),e("code",null,"download - node")],-1),W=e("h3",{id:"webstorm-debug",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#webstorm-debug","aria-hidden":"true"},"#"),n(" webstorm debug")],-1),D=e("p",null,"webstorm debug 出现： Please ensure that the browser was started successfully with remote debugging port opened. Port cannot be opened if Chrome having the same User Data Directory is already launched.",-1),E=e("blockquote",null,[e("p",null,[n("Settings -> Tools -> Web Browsers and Preview "),e("img",{src:p,alt:"chrome设置"})])],-1),B={href:"https://juejin.cn/post/7160667398855458853",target:"_blank",rel:"noopener noreferrer"},G={href:"https://stackoverflow.com/questions/64659160/debug-angular-app-in-intellij-with-chrome-under-windows/76039479#76039479",target:"_blank",rel:"noopener noreferrer"},I=t(`<h2 id="npm代理配置" tabindex="-1"><a class="header-anchor" href="#npm代理配置" aria-hidden="true">#</a> npm代理配置</h2><h3 id="使用nrm管理registry地址" tabindex="-1"><a class="header-anchor" href="#使用nrm管理registry地址" aria-hidden="true">#</a> 使用nrm管理registry地址</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">-g</span> nrm
nrm <span class="token function">add</span> <span class="token function">npm</span> http://registry.npmjs.org
nrm <span class="token function">add</span> taobao https://registry.npm.taobao.org
<span class="token comment"># 切换npm registry地址</span>
nrm use taobao
nrm use <span class="token function">npm</span>
<span class="token comment"># 移除代理</span>
<span class="token function">npm</span> config delete proxy
<span class="token function">npm</span> config delete https-proxy
<span class="token comment"># 配置代理</span>
<span class="token function">npm</span> config <span class="token builtin class-name">set</span> <span class="token assign-left variable">proxy</span><span class="token operator">=</span>http://127.0.0.1:1081
<span class="token comment"># 查看代理</span>
<span class="token function">npm</span> config get proxy
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="git-代理配置" tabindex="-1"><a class="header-anchor" href="#git-代理配置" aria-hidden="true">#</a> git 代理配置</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 设置全局代理</span>
<span class="token function">git</span> config <span class="token parameter variable">--global</span> http.proxy http://127.0.0.1:1081
<span class="token function">git</span> config <span class="token parameter variable">--global</span> https.proxy https://127.0.0.1:1081
<span class="token comment"># 使用socks5代理的</span>
<span class="token function">git</span> config <span class="token parameter variable">--global</span> http.proxy socks5://127.0.0.1:1081
<span class="token function">git</span> config <span class="token parameter variable">--global</span> https.proxy socks5://127.0.0.1:1081

<span class="token comment"># 只对github.com使用代理，其他仓库不走代理</span>
<span class="token function">git</span> config <span class="token parameter variable">--global</span> http.https://github.com.proxy socks5://127.0.0.1:1081
<span class="token function">git</span> config <span class="token parameter variable">--global</span> https.https://github.com.proxy socks5://127.0.0.1:1081
<span class="token comment"># 取消github代理</span>
<span class="token function">git</span> config <span class="token parameter variable">--global</span> <span class="token parameter variable">--unset</span> http.https://github.com.proxy
<span class="token function">git</span> config <span class="token parameter variable">--global</span> <span class="token parameter variable">--unset</span> https.https://github.com.proxy

<span class="token comment"># 取消全局代理</span>
<span class="token function">git</span> config <span class="token parameter variable">--global</span> <span class="token parameter variable">--unset</span> http.proxy
<span class="token function">git</span> config <span class="token parameter variable">--global</span> <span class="token parameter variable">--unset</span> https.proxy
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),T={id:"installing-nvm-on-ubuntu",tabindex:"-1"},J=e("a",{class:"header-anchor",href:"#installing-nvm-on-ubuntu","aria-hidden":"true"},"#",-1),R={href:"https://tecadmin.net/how-to-install-nvm-on-ubuntu-22-04/",target:"_blank",rel:"noopener noreferrer"},U={id:"node-js-–-nvm-proxy-settings-configuration-file",tabindex:"-1"},M=e("a",{class:"header-anchor",href:"#node-js-–-nvm-proxy-settings-configuration-file","aria-hidden":"true"},"#",-1),z={href:"https://itecnote.com/tecnote/node-js-nvm-proxy-settings-configuration-file/",target:"_blank",rel:"noopener noreferrer"},A=e("p",null,[n("NVM uses curl, so modifying the file"),e("code",null," ~/.curlrc"),n(" file (or create it if it does not exist)")],-1),H=e("p",null,"proxy = <proxy_host>:<proxy_port>",-1),K=e("h2",{id:"npm和git自动设置代理脚本",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#npm和git自动设置代理脚本","aria-hidden":"true"},"#"),n(" npm和git自动设置代理脚本")],-1),O=e("p",null,[n("需要安装 "),e("code",null,"shelljs"),n(" 依赖 @"),e("a",{href:"../_code/front-end/setNpmGitProxy.js"},"code js")],-1),Q={id:"cygwin64",tabindex:"-1"},$=e("a",{class:"header-anchor",href:"#cygwin64","aria-hidden":"true"},"#",-1),X={href:"https://www.cygwin.com/",target:"_blank",rel:"noopener noreferrer"},Y=e("p",null,"Cygwin is: a large collection of GNU and Open Source tools which provide functionality similar to a Linux distribution on Windows.",-1),Z=e("p",null,[n("安装 cygwin ,相当于一个子 Linux 系统,安装完成之后目录如下 "),e("img",{src:u,alt:"v2rayN端口设置"})],-1),ee={id:"how-to-open-cygwin-at-a-specific-folder",tabindex:"-1"},ne=e("a",{class:"header-anchor",href:"#how-to-open-cygwin-at-a-specific-folder","aria-hidden":"true"},"#",-1),se={href:"https://stackoverflow.com/questions/9637601/open-cygwin-at-a-specific-folder",target:"_blank",rel:"noopener noreferrer"},ae=t('<h3 id="搭建make环境" tabindex="-1"><a class="header-anchor" href="#搭建make环境" aria-hidden="true">#</a> 搭建make环境</h3><p>windows 下 <code>make</code> 环境搭建，将 <code>react-draggable</code> 仓库克隆到 Cygwin 安装目录下的 <code>/home/workspace</code> 中, 在 webstorm 中 <code>settings-Tools-Terminal</code> 中设置终端路径 <code>F:\\programs\\cygwin\\Cygwin.bat</code>, 并配置 Flow 类型校验，<code>setting-&gt;Languages &amp; Frameworks-&gt;JavaScript</code> 选择语言版本为 <code>Flow</code>, 然后就可以在终端执行 <code>make dev</code> 命令了</p>',2),te={href:"https://github.com/react-grid-layout/react-draggable",target:"_blank",rel:"noopener noreferrer"},oe={href:"https://ajimide.gitbooks.io/reactlearn/content/Question/20171010-Config-flow-in-WebStorm.html",target:"_blank",rel:"noopener noreferrer"};function ie(re,le){const s=i("ExternalLinkIcon");return r(),l("div",null,[m,e("p",null,[e("a",b,[n("ssr节点"),a(s)]),n(),g,n(" v2rayN下载地址："),v]),_,e("h4",f,[k,n(),e("a",w,[n("jetbrains 2021.3.x、2021.2.x、2021.1.x等 版本激活教程"),a(s)])]),x,e("ul",null,[y,e("li",null,[e("a",q,[n("Emmet everywhere插件"),a(s)])]),N,j,S,C,L]),F,e("ul",null,[e("li",null,[e("p",null,[e("a",P,[n("webstorm 不识别 node 中的 require/process 等"),a(s)])]),V])]),W,D,E,e("ul",null,[e("li",null,[e("a",B,[n("webstorm debug"),a(s)])]),e("li",null,[e("a",G,[n("debug-angular-app-in-intellij-with-chrome-under-windows"),a(s)])])]),I,e("h2",T,[J,n(),e("a",R,[n("Installing NVM on Ubuntu"),a(s)])]),e("h2",U,[M,n(),e("a",z,[n("Node.js – nvm proxy settings configuration file"),a(s)])]),A,H,K,O,e("h2",Q,[$,n(),e("a",X,[n("Cygwin64"),a(s)])]),Y,Z,e("h3",ee,[ne,n(),e("a",se,[n("how to open-cygwin-at-a-specific-folder"),a(s)])]),ae,e("ul",null,[e("li",null,[e("a",te,[n("react-draggable"),a(s)])]),e("li",null,[e("a",oe,[n("在 WebStorm 中配置 React for Flow"),a(s)])])])])}const de=o(h,[["render",ie],["__file","/home/runner/work/vuepress_blog/vuepress_blog/docs/.vuepress/.temp/pages/front-end/setNpmGitProxy.html.vue"]]);export{de as default};
