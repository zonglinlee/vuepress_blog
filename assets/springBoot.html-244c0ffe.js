import{_ as t,r as i,o as l,c as r,a as n,b as e,d as a,e as o}from"./app-4d1d3ef4.js";const c="/vuepress_blog/assets/spring-boot-autoconfiguration-393085a8.png",p={},d=n("h3",{id:"faq",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#faq","aria-hidden":"true"},"#"),e(" FAQ")],-1),u={href:"https://www.jianshu.com/p/5f5b82e7ee23",target:"_blank",rel:"noopener noreferrer"},m=o(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 项目路径</span>
server.servlet.context-path<span class="token operator">=</span>/test-demo
<span class="token comment"># 静态资源配置</span>
spring.mvc.static-path-pattern<span class="token operator">=</span>/static/**

<span class="token comment"># 访问地址 http://server:port/test-demo/static/xxx.jpg</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),g={href:"https://blog.csdn.net/qq_49137582/article/details/123601007",target:"_blank",rel:"noopener noreferrer"},v=o(`<div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 前端页面实现头像图片上传并实时更新显示的功能，但是文件上传成功后不能实时显示，必须重启服务器后才能显示出来</span>
<span class="token comment">// 这是服务器的自我保护机制，为了防止暴露绝对路径</span>
<span class="token annotation punctuation">@Configuration</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ImageUploadConfig</span> <span class="token keyword">implements</span> <span class="token class-name">WebMvcConfigurer</span> <span class="token punctuation">{</span>
        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">addResourceHandlers</span><span class="token punctuation">(</span><span class="token class-name">ResourceHandlerRegistry</span> registry<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        registry<span class="token punctuation">.</span><span class="token function">addResourceHandler</span><span class="token punctuation">(</span><span class="token string">&quot;/static/images/upload/**&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addResourceLocations</span><span class="token punctuation">(</span><span class="token string">&quot;file:E:\\\\Allworkspaces\\\\idea-workspace\\\\SpringBoot\\\\store\\\\src\\\\main\\\\resources\\\\static\\\\images\\\\upload\\\\&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),b={href:"https://mybatis.org/mybatis-3/zh/logging.html",target:"_blank",rel:"noopener noreferrer"},k={href:"https://baomidou.com/pages/f84a74/#%E5%90%AF%E5%8A%A8-mybatis-%E6%9C%AC%E8%BA%AB%E7%9A%84-log-%E6%97%A5%E5%BF%97",target:"_blank",rel:"noopener noreferrer"},h={href:"https://medium.com/illumination/how-does-mybatis-plus-print-sql-logs-and-parameters-to-the-log-file-under-springboot-d9573c30f9e6",target:"_blank",rel:"noopener noreferrer"},_=o(`<div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token comment">#springBoot mybatis-plus配置</span>
logging.level.com.baomidou.mybatisplus=DEBUG
  <span class="token comment">#Project mapper directory</span>
logging.level.com.dragonsoft.demojar.mapper=DEBUG
mybatis<span class="token punctuation">-</span>plus.configuration.log<span class="token punctuation">-</span>impl=org.apache.ibatis.logging.slf4j.Slf4jImpl
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),f={href:"https://www.baeldung.com/sql-logging-spring-boot",target:"_blank",rel:"noopener noreferrer"},y=o("<ul><li>Spring Data JDBC,Java为关系数据库定义了一套标准的访问接口：<code>JDBC（Java Database Connectivity）</code> ,JDBC接口是Java标准库自带的,可以直接编译,具体的JDBC驱动是由数据库厂商提供的，例如，MySQL的JDBC驱动由Oracle提供。因此，访问某个具体的数据库，我们只需要引入该厂商提供的JDBC驱动，就可以通过JDBC接口来访问，这样保证了Java程序编写的是一套数据库访问代码，却可以访问各种不同的数据库，因为他们都提供了标准的JDBC驱动.实际上，一个MySQL的JDBC的驱动就是一个jar包，它本身也是纯Java编写的。我们自己编写的代码只需要引用Java标准库提供的java.sql包下面的相关接口，由此再间接地通过MySQL驱动的jar包通过网络访问MySQL服务器，所有复杂的网络通讯都被封装到JDBC驱动中，因此，Java程序本身只需要引入一个MySQL驱动的jar包就可以正常访问MySQL服务器</li><li>Spring Data JPA, makes it easy to easily implement JPA-based <code>(Java Persistence API)</code> repositories. JPA就是JavaEE的一个 ORM 标准，它的实现其实和 Hibernate 没啥本质区别，但是用户如果使用JPA，那么引用的就是<code>jakarta.persistence</code>这个“标准”包，而不是<code>org.hibernate</code> 这样的第三方包。因为JPA只是接口，所以，还需要选择一个实现产品，跟JDBC接口和MySQL驱动一个道理。 我们使用JPA时也完全可以选择 <code>Hibernate</code> 作为底层实现，但也可以选择其它的JPA提供方，比如 <code>EclipseLink</code>。Spring内置了JPA的集成，并支持选择 <code>Hibernate</code> 或 <code>EclipseLink</code> 作为实现</li></ul>",1),B=o(`<div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code>  <span class="token comment">#To Standard Output</span>
  spring.jpa.show<span class="token punctuation">-</span>sql=true
  spring.jpa.properties.hibernate.format_sql=true
  <span class="token comment">#Via Loggers</span>
  logging.level.org.hibernate.SQL=DEBUG
  logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
  <span class="token comment">#Logging JdbcTemplate Queries</span>
  logging.level.org.springframework.jdbc.core.JdbcTemplate=DEBUG
  logging.level.org.springframework.jdbc.core.StatementCreatorUtils=TRACE
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),J={href:"https://blog.csdn.net/b452608/article/details/122704798",target:"_blank",rel:"noopener noreferrer"},S={href:"https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#features.developing-auto-configuration.understanding-auto-configured-beans",target:"_blank",rel:"noopener noreferrer"},E=n("img",{src:c,alt:"spring boot auto configuration"},null,-1),A={href:"https://docs.spring.io/spring-boot/docs/2.0.1.RELEASE/reference/htmlsingle/#common-application-properties",target:"_blank",rel:"noopener noreferrer"};function C(w,L){const s=i("ExternalLinkIcon");return l(),r("div",null,[d,n("ul",null,[n("li",null,[n("a",u,[e("使用SpringBoot时关于静态资源的访问问题"),a(s)])])]),m,n("ul",null,[n("li",null,[n("a",g,[e("解决决SpringBoot图片上传需重启服务器才能显示的问题"),a(s)])])]),v,n("ul",null,[n("li",null,[e("mybatis sql 日志打印 "),n("ul",null,[n("li",null,[e("mybatis/mybatis-plus 日志打印配置：这两个需要通过配置 "),n("a",b,[e("mybatis日志输出"),a(s)]),e(" ,或者配置 "),n("a",k,[e("mybatis-plus"),a(s)]),e(" 日志输出，最终都是配置 mybatis 来输出日志，详细的配置可以参考 "),n("a",h,[e("How Does Mybatis-Plus Print SQL Logs and Parameters To The Log File Under SpringBoot"),a(s)])])])])]),_,n("ul",null,[n("li",null,[n("a",f,[e("Show Hibernate/JPA SQL Statements from Spring Boot"),a(s)]),y])]),B,n("ul",null,[n("li",null,[n("a",J,[e("mybatis mapper xml 字段和表自动提示"),a(s)])]),n("li",null,[n("a",S,[e("spring boot 配置项查看"),a(s)]),E]),n("li",null,[n("a",A,[e("spring-boot 文档以及配置项"),a(s)])])])])}const D=t(p,[["render",C],["__file","/home/runner/work/vuepress_blog/vuepress_blog/docs/.vuepress/.temp/pages/java/springBoot.html.vue"]]);export{D as default};
