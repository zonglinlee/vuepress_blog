import{_ as e,r as o,o as p,c as i,a as n,b as a,d as t,e as c}from"./app-4d1d3ef4.js";const l={},r={id:"mybatis-spring",tabindex:"-1"},u=n("a",{class:"header-anchor",href:"#mybatis-spring","aria-hidden":"true"},"#",-1),d={href:"https://mybatis.org/spring/zh/index.html",target:"_blank",rel:"noopener noreferrer"},g=c(`<p>MyBatis-Spring 会帮助你将 MyBatis 代码无缝地整合到 Spring 中。它将允许 MyBatis 参与到 Spring 的事务管理之中，创建映射器 mapper 和 SqlSession 并注入到 bean 中，以及将 Mybatis 的异常转换为 Spring 的 DataAccessException</p><p>maven依赖</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.mybatis<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>mybatis-spring<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.0.7<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),k={id:"数据库连接池",tabindex:"-1"},_=n("a",{class:"header-anchor",href:"#数据库连接池","aria-hidden":"true"},"#",-1),m={href:"https://segmentfault.com/a/1190000039164770",target:"_blank",rel:"noopener noreferrer"},h=n("p",null,"Java应用程序开发时，常用的连接池有C3P0、DBCP、HikariCP、Druid等。 springboot2.x之后，系统的默认数据源由原来的的org.apache.tomcat.jdbc.pool.DataSource更改为com.zaxxer.hikari.HikariDataSource。",-1),v=n("p",null,"数据库连接池负责分配、管理和释放数据库连接，它允许应用程序重复使用一个现有的数据库连接，而不是再重新建立一个。",-1),b=n("p",null,"不使用连接池流程，以访问MySQL为例，执行一个SQL命令，如果不使用连接池，需要经过哪些流程",-1),x=n("ul",null,[n("li",null,"TCP建立连接的三次握手"),n("li",null,"MySQL认证的三次握手"),n("li",null,"真正的SQL执行"),n("li",null,"MySQL的关闭"),n("li",null,"TCP的四次握手关闭")],-1);function y(f,S){const s=o("ExternalLinkIcon");return p(),i("div",null,[n("h2",r,[u,a(),n("a",d,[a("MyBatis-Spring"),t(s)])]),g,n("h2",k,[_,a(),n("a",m,[a("数据库连接池"),t(s)])]),h,v,b,x])}const M=e(l,[["render",y],["__file","/home/runner/work/vuepress_blog/vuepress_blog/docs/.vuepress/.temp/pages/java/mybatis-spring.html.vue"]]);export{M as default};
