import{_ as t,r,o as s,c as n,a as e,b as a,d as c,e as l}from"./app-4d1d3ef4.js";const i={},p={href:"https://juejin.cn/post/6844903718152830989",target:"_blank",rel:"noopener noreferrer"},d=l("<blockquote><p>https://webpack.js.org/loaders/sass-loader/#resolving-import-at-rules</p></blockquote><p>Using <code>~</code> is <strong>deprecated</strong> and can be removed from your code (we recommend it), but we still support it for historical reasons. Why can you remove it? The loader will first try to resolve @import as a <strong>relative path</strong>. If it cannot be resolved, then the loader will try to resolve @import inside <strong>node_modules</strong>.</p><p>It&#39;s important to prepend it with <strong>only</strong> <code>~</code>, because <code>~/</code> resolves to the <strong>home directory</strong>.</p>",3);function u(_,m){const o=r("ExternalLinkIcon");return s(),n("div",null,[e("ul",null,[e("li",null,[e("a",p,[a("webpack中的css引入文件需要用~@的形式"),c(o)])])]),d])}const g=t(i,[["render",u],["__file","/home/runner/work/vuepress_blog/vuepress_blog/docs/.vuepress/.temp/pages/webpack/webpack_question.html.vue"]]);export{g as default};
