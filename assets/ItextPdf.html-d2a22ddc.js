import{_ as n,o as s,c as a,e as t}from"./app-4d1d3ef4.js";const p={},e=t(`<h2 id="itextpdf-解析富文本标签" tabindex="-1"><a class="header-anchor" href="#itextpdf-解析富文本标签" aria-hidden="true">#</a> itextPdf 解析富文本标签</h2><p>maven 依赖</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&lt;dependency&gt;
    &lt;groupId&gt;com.itextpdf&lt;/groupId&gt;
    &lt;artifactId&gt;itextpdf&lt;/artifactId&gt;
    &lt;version&gt;5.5.9&lt;/version&gt;
&lt;/dependency&gt;
&lt;dependency&gt;
    &lt;groupId&gt;com.itextpdf&lt;/groupId&gt;
    &lt;artifactId&gt;itext-asian&lt;/artifactId&gt;
    &lt;version&gt;5.2.0&lt;/version&gt;
&lt;/dependency&gt;
&lt;dependency&gt;
    &lt;groupId&gt;com.itextpdf.tool&lt;/groupId&gt;
    &lt;artifactId&gt;xmlworker&lt;/artifactId&gt;
    &lt;version&gt;5.5.10&lt;/version&gt;
&lt;/dependency&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>xml解析 富文本 工具类</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>itextpdf<span class="token punctuation">.</span>text<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>itextpdf<span class="token punctuation">.</span>tool<span class="token punctuation">.</span>xml<span class="token punctuation">.</span></span><span class="token class-name">ElementList</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>itextpdf<span class="token punctuation">.</span>tool<span class="token punctuation">.</span>xml<span class="token punctuation">.</span></span><span class="token class-name">XMLWorker</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>itextpdf<span class="token punctuation">.</span>tool<span class="token punctuation">.</span>xml<span class="token punctuation">.</span></span><span class="token class-name">XMLWorkerFontProvider</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>itextpdf<span class="token punctuation">.</span>tool<span class="token punctuation">.</span>xml<span class="token punctuation">.</span></span><span class="token class-name">XMLWorkerHelper</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>itextpdf<span class="token punctuation">.</span>tool<span class="token punctuation">.</span>xml<span class="token punctuation">.</span>css<span class="token punctuation">.</span></span><span class="token class-name">CssFile</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>itextpdf<span class="token punctuation">.</span>tool<span class="token punctuation">.</span>xml<span class="token punctuation">.</span>css<span class="token punctuation">.</span></span><span class="token class-name">StyleAttrCSSResolver</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>itextpdf<span class="token punctuation">.</span>tool<span class="token punctuation">.</span>xml<span class="token punctuation">.</span>html<span class="token punctuation">.</span></span><span class="token class-name">CssAppliers</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>itextpdf<span class="token punctuation">.</span>tool<span class="token punctuation">.</span>xml<span class="token punctuation">.</span>html<span class="token punctuation">.</span></span><span class="token class-name">CssAppliersImpl</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>itextpdf<span class="token punctuation">.</span>tool<span class="token punctuation">.</span>xml<span class="token punctuation">.</span>html<span class="token punctuation">.</span></span><span class="token class-name">Tags</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>itextpdf<span class="token punctuation">.</span>tool<span class="token punctuation">.</span>xml<span class="token punctuation">.</span>parser<span class="token punctuation">.</span></span><span class="token class-name">XMLParser</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>itextpdf<span class="token punctuation">.</span>tool<span class="token punctuation">.</span>xml<span class="token punctuation">.</span>pipeline<span class="token punctuation">.</span>css<span class="token punctuation">.</span></span><span class="token class-name">CSSResolver</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>itextpdf<span class="token punctuation">.</span>tool<span class="token punctuation">.</span>xml<span class="token punctuation">.</span>pipeline<span class="token punctuation">.</span>css<span class="token punctuation">.</span></span><span class="token class-name">CssResolverPipeline</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>itextpdf<span class="token punctuation">.</span>tool<span class="token punctuation">.</span>xml<span class="token punctuation">.</span>pipeline<span class="token punctuation">.</span>end<span class="token punctuation">.</span></span><span class="token class-name">ElementHandlerPipeline</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>itextpdf<span class="token punctuation">.</span>tool<span class="token punctuation">.</span>xml<span class="token punctuation">.</span>pipeline<span class="token punctuation">.</span>html<span class="token punctuation">.</span></span><span class="token class-name">HtmlPipeline</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>itextpdf<span class="token punctuation">.</span>tool<span class="token punctuation">.</span>xml<span class="token punctuation">.</span>pipeline<span class="token punctuation">.</span>html<span class="token punctuation">.</span></span><span class="token class-name">HtmlPipelineContext</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">ByteArrayInputStream</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>regex<span class="token punctuation">.</span></span><span class="token class-name">Matcher</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>regex<span class="token punctuation">.</span></span><span class="token class-name">Pattern</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyXMLWorkerHelper</span>  <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">MyFontsProvider</span> <span class="token keyword">extends</span> <span class="token class-name">XMLWorkerFontProvider</span> <span class="token punctuation">{</span>
        <span class="token keyword">public</span> <span class="token class-name">MyFontsProvider</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> <span class="token class-name">Font</span> <span class="token function">getFont</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">String</span> fontname<span class="token punctuation">,</span> <span class="token class-name">String</span> encoding<span class="token punctuation">,</span> <span class="token keyword">float</span> size<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token keyword">int</span> style<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">String</span> fntname <span class="token operator">=</span> fontname<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>fntname <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                fntname <span class="token operator">=</span> <span class="token string">&quot;宋体&quot;</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">return</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">getFont</span><span class="token punctuation">(</span>fntname<span class="token punctuation">,</span> encoding<span class="token punctuation">,</span> size<span class="token punctuation">,</span> style<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">ElementList</span> <span class="token function">parseToElementList</span><span class="token punctuation">(</span><span class="token class-name">String</span> html<span class="token punctuation">,</span> <span class="token class-name">String</span> css<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
        <span class="token comment">// CSS</span>
        <span class="token class-name">CSSResolver</span> cssResolver <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StyleAttrCSSResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>css <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">CssFile</span> cssFile <span class="token operator">=</span> <span class="token class-name">XMLWorkerHelper</span><span class="token punctuation">.</span><span class="token function">getCSS</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ByteArrayInputStream</span><span class="token punctuation">(</span>css<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            cssResolver<span class="token punctuation">.</span><span class="token function">addCss</span><span class="token punctuation">(</span>cssFile<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// HTML</span>
        <span class="token class-name">MyFontsProvider</span> fontProvider <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyFontsProvider</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">CssAppliers</span> cssAppliers <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CssAppliersImpl</span><span class="token punctuation">(</span>fontProvider<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">HtmlPipelineContext</span> htmlContext <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HtmlPipelineContext</span><span class="token punctuation">(</span>cssAppliers<span class="token punctuation">)</span><span class="token punctuation">;</span>
        htmlContext<span class="token punctuation">.</span><span class="token function">setTagFactory</span><span class="token punctuation">(</span><span class="token class-name">Tags</span><span class="token punctuation">.</span><span class="token function">getHtmlTagProcessorFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        htmlContext<span class="token punctuation">.</span><span class="token function">autoBookmark</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// Pipelines</span>
        <span class="token class-name">ElementList</span> elements <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ElementList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">ElementHandlerPipeline</span> end <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ElementHandlerPipeline</span><span class="token punctuation">(</span>elements<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">HtmlPipeline</span> htmlPipeline <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HtmlPipeline</span><span class="token punctuation">(</span>htmlContext<span class="token punctuation">,</span> end<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">CssResolverPipeline</span> cssPipeline <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CssResolverPipeline</span><span class="token punctuation">(</span>cssResolver<span class="token punctuation">,</span> htmlPipeline<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// XML Worker</span>
        <span class="token class-name">XMLWorker</span> worker <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XMLWorker</span><span class="token punctuation">(</span>cssPipeline<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">XMLParser</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XMLParser</span><span class="token punctuation">(</span>worker<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// fix: ul/ol 中换行会解析为 li标签的问题</span>
        <span class="token class-name">Pattern</span> reg <span class="token operator">=</span> <span class="token class-name">Pattern</span><span class="token punctuation">.</span><span class="token function">compile</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;[ou]l.*&gt;(\\\\s+)&lt;li|&lt;/li&gt;(\\\\s+)&lt;((li)|(/[ou]l&gt;))&quot;</span><span class="token punctuation">,</span><span class="token class-name">Pattern</span><span class="token punctuation">.</span><span class="token constant">CASE_INSENSITIVE</span><span class="token operator">|</span><span class="token class-name">Pattern</span><span class="token punctuation">.</span><span class="token constant">MULTILINE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Matcher</span> matcher <span class="token operator">=</span> reg<span class="token punctuation">.</span><span class="token function">matcher</span><span class="token punctuation">(</span>html<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">StringBuffer</span> operatorStr<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">StringBuffer</span><span class="token punctuation">(</span>html<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>matcher<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token class-name">String</span> group1 <span class="token operator">=</span> matcher<span class="token punctuation">.</span><span class="token function">group</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">String</span> group2 <span class="token operator">=</span> matcher<span class="token punctuation">.</span><span class="token function">group</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>group1<span class="token operator">!=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                operatorStr<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>matcher<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>matcher<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>group2<span class="token operator">!=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                operatorStr<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>matcher<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>matcher<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            matcher <span class="token operator">=</span> reg<span class="token punctuation">.</span><span class="token function">matcher</span><span class="token punctuation">(</span>operatorStr<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// fix: sub sup 标签不生效 添加样式</span>
        html <span class="token operator">=</span> operatorStr<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;sub&gt;&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;&lt;sub style=\\&quot;vertical-align: sub;\\&quot;&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;sup&gt;&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;&lt;sup style=\\&quot;vertical-align: super;\\&quot;&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// fix: XMLWorker 解析 xml, html 标签中的单标签结构不符合要求</span>
        html <span class="token operator">=</span> html<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;br&gt;&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;&lt;br&gt;&lt;/br&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;hr&gt;&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;&lt;hr&gt;&lt;/hr&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        p<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ByteArrayInputStream</span><span class="token punctuation">(</span>html<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//        for (int i = 0; i &lt; elements.size(); i++) {</span>
<span class="token comment">//            Element element = elements.get(i);</span>
<span class="token comment">//            int type = element.type();</span>
<span class="token comment">//            if (type==14){</span>
<span class="token comment">//                List element1 = (List) element;</span>
<span class="token comment">//                element1.getItems().removeIf(item-&gt;{</span>
<span class="token comment">//                    int type1 = item.type();</span>
<span class="token comment">//                    if(type1==15){</span>
<span class="token comment">//                        return ((Chunk) ((ListItem) item).get(0)).getContent().equals(&quot;\\n&quot;);</span>
<span class="token comment">//                    }else {</span>
<span class="token comment">//                        return false;</span>
<span class="token comment">//                    }</span>
<span class="token comment">//                });</span>
<span class="token comment">//            }</span>
<span class="token comment">//        }</span>
        <span class="token keyword">return</span> elements<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>代码中使用</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>        <span class="token class-name">PdfPCell</span> cell1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PdfPCell</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        cell1<span class="token punctuation">.</span><span class="token function">setHorizontalAlignment</span><span class="token punctuation">(</span><span class="token class-name">Element</span><span class="token punctuation">.</span><span class="token constant">ALIGN_LEFT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        cell1<span class="token punctuation">.</span><span class="token function">setVerticalAlignment</span><span class="token punctuation">(</span><span class="token class-name">Element</span><span class="token punctuation">.</span><span class="token constant">ALIGN_TOP</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Element</span> e <span class="token operator">:</span> <span class="token class-name">MyXMLWorkerHelper</span><span class="token punctuation">.</span><span class="token function">parseToElementList</span><span class="token punctuation">(</span>projectInfo<span class="token punctuation">.</span><span class="token function">getCompAbout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            cell1<span class="token punctuation">.</span><span class="token function">addElement</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        table<span class="token punctuation">.</span><span class="token function">addCell</span><span class="token punctuation">(</span>cell1<span class="token punctuation">)</span><span class="token punctuation">;</span>
        document<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>table<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7),o=[e];function c(l,i){return s(),a("div",null,o)}const k=n(p,[["render",c],["__file","/home/runner/work/vuepress_blog/vuepress_blog/docs/.vuepress/.temp/pages/java/ItextPdf.html.vue"]]);export{k as default};
