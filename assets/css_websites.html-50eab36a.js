import{_ as t,r as o,o as r,c as n,a as e,b as a,d as i,e as c}from"./app-4d1d3ef4.js";const l={},d={href:"https://csstriggers.com",target:"_blank",rel:"noopener noreferrer"},p=c(`<p>During a CSS animation, this process repeats every frame. However, CSS properties that never affect geometry or position, such as color, may skip the Layout step. If a color changes, the browser doesn’t calculate any new geometry, it goes to Paint → Composite. And there are few properties that directly go to Composite.</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Layout: re-compute the geometry and position of each element, then

Paint: re-compute how everything should look like at their places, including background, colors,

Composite: render the final results into pixels on screen, apply CSS transforms if they exist.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2);function m(u,h){const s=o("ExternalLinkIcon");return r(),n("div",null,[e("ul",null,[e("li",null,[e("a",d,[a("csstriggers.com"),i(s)])])]),p])}const _=t(l,[["render",m],["__file","/home/runner/work/vuepress_blog/vuepress_blog/docs/.vuepress/.temp/pages/css/css_websites.html.vue"]]);export{_ as default};
