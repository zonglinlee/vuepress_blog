import{_ as n,o as e,c as s,e as a}from"./app-4d1d3ef4.js";const t={},o=a(`<p>https://blog.csdn.net/u013670453/article/details/114489201</p><p>https://stackoverflow.com/questions/70663523/the-unauthenticated-git-protocol-on-port-9418-is-no-longer-supported</p><p>git config --global url.&quot;https://github.com/&quot;.insteadOf git://github.com/</p><h2 id="jenkins-中使用-yarn" tabindex="-1"><a class="header-anchor" href="#jenkins-中使用-yarn" aria-hidden="true">#</a> jenkins 中使用 yarn</h2><p><strong>构建-执行 shell</strong> 中全局安装 <code>yarn</code>，如果你在服务器上提前安装好了 <code>yarn</code>，可能在 jenkins 构建过程中找不到 <code>yarn</code> 命令，如果先使用 <code>npm</code> 安装 <code>yarn</code>， 再执行 <code>yarn</code> 命令就可以，我也不知道为什么</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>
<span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">-g</span> <span class="token function">yarn</span>
<span class="token function">yarn</span> <span class="token parameter variable">-v</span>
<span class="token comment"># Don’t generate a yarn.lock lockfile.</span>
<span class="token function">yarn</span> <span class="token function">install</span> --pure-lockfile
<span class="token function">yarn</span> run build:test
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6),c=[o];function i(r,l){return e(),s("div",null,c)}const d=n(t,[["render",i],["__file","/home/runner/work/vuepress_blog/vuepress_blog/docs/.vuepress/.temp/pages/others/jenkins.html.vue"]]);export{d as default};
