import{_ as i,r as o,o as r,c as l,a as e,b as s,d as a,e as t}from"./app-4d1d3ef4.js";const d={},c={id:"rufus",tabindex:"-1"},p=e("a",{class:"header-anchor",href:"#rufus","aria-hidden":"true"},"#",-1),h={href:"https://rufus.ie/zh/",target:"_blank",rel:"noopener noreferrer"},u=t(`<p>轻松创建 USB 启动盘</p><h2 id="terminology" tabindex="-1"><a class="header-anchor" href="#terminology" aria-hidden="true">#</a> Terminology</h2><ul><li>gcc: 是 GNU compiler collection 的缩写，它是 Linux 下一个编译器集合( 相当于 javac )， 是 c 或 c++程序的编译器</li></ul><h2 id="远程登录-ssh" tabindex="-1"><a class="header-anchor" href="#远程登录-ssh" aria-hidden="true">#</a> 远程登录 SSH</h2><p>ssh 配置文件 <code>/etc/ssh/sshd.config</code></p><h3 id="ssh启用root登录" tabindex="-1"><a class="header-anchor" href="#ssh启用root登录" aria-hidden="true">#</a> ssh启用root登录</h3><p>修改配置文件之后重启ssh，<code>sudo service ssh restart</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 修改配置文件</span>
PermitRootLogin <span class="token function">yes</span> <span class="token comment">##允许root登陆</span>
PasswordAuthentication <span class="token function">yes</span> <span class="token comment">##允许用密码方式登陆</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8),b={id:"windows上的shell脚本在linux上执行不了",tabindex:"-1"},m=e("a",{class:"header-anchor",href:"#windows上的shell脚本在linux上执行不了","aria-hidden":"true"},"#",-1),v={href:"https://stackoverflow.com/questions/14219092/bash-script-and-bin-bashm-bad-interpreter-no-such-file-or-directory",target:"_blank",rel:"noopener noreferrer"},g=t('<p>problem is with dos line ending. Following will convert it for unix</p><p><code>dos2unix file_name</code> NB: you may need to install dos2unix first with <strong>apt install dos2unix</strong></p><p>another way to do it is using sed command to search and replace the dos line ending characters to unix format:</p><p><strong>$sed -i -e &#39;s/\\r$//&#39; your_script.sh</strong></p><h2 id="ubuntu-软件包管理" tabindex="-1"><a class="header-anchor" href="#ubuntu-软件包管理" aria-hidden="true">#</a> ubuntu 软件包管理</h2><p><code>apt</code> 命令是 <code>Debian Linux </code>发行版中的 APT 软件包管理工具,使用 apt-get 命令的第一步就是引入必需的软件库,<code>/etc/apt/sources.list</code> 是存放这些地址列表的配置文件</p>',6),k={id:"apt-vs-dpkg-debian",tabindex:"-1"},f=e("a",{class:"header-anchor",href:"#apt-vs-dpkg-debian","aria-hidden":"true"},"#",-1),_={href:"https://www.linuxfordevices.com/tutorials/debian/apt-vs-dpkg-debian",target:"_blank",rel:"noopener noreferrer"},x=t(`<p>APT stands for Advanced Packaging Tools used in Debian and its derivatives to manage packages. It is used for installing, upgrading, configuring, removing packages, and maintaining source repositories. But, Linux has a modular design philosophy which APT also follows Instead of doing all tasks themselves in a monolithic manner, it employs several different applications under the hood to do those tasks. For example, it might use curl to download the .deb source package and all its dependencies and then use dpkg to install it.</p><p>dpkg (Debian Package Manager) works under the hood of APT. While APT manages remote repositories and resolves dependencies for you, it uses dpkg to actually make the changes of installing/removing packages. dpkg on itself cannot retrieve/download files from remote repositories, nor can it figure out dependencies.</p><table><thead><tr><th>Functions</th><th>APT</th><th>dpkg</th></tr></thead><tbody><tr><td>Can download packages from remote repositories</td><td>YES</td><td>NO</td></tr><tr><td>Can resolve dependencies</td><td>YES</td><td>NO</td></tr><tr><td>Install local packages</td><td>YES(using dpkg)</td><td>YES</td></tr><tr><td>Install remote package</td><td>YES (using dpkg)</td><td>NO (users need to manually download a package if they wish to use dpkg)</td></tr><tr><td>List installed packages</td><td>YES</td><td>YES</td></tr></tbody></table><h3 id="安装包格式" tabindex="-1"><a class="header-anchor" href="#安装包格式" aria-hidden="true">#</a> 安装包格式</h3><ul><li><code>.deb</code> 格式: <code>dpkg -i &lt;下载好的安装包&gt;</code></li><li><code>.bin</code> 格式: 直接在命令行中执行该文件既可</li><li><code>tar.gz</code> 格式: 先要通过命令将压缩包解压，然后才能进行编译，继而进行安装</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 解压</span>
 <span class="token function">tar</span> <span class="token parameter variable">-zxvf</span> FileName.tar.gz
<span class="token comment"># 配置</span>
 ./configure 
<span class="token comment"># 编译</span>
 <span class="token function">make</span>
<span class="token comment"># 安装</span>
 <span class="token function">make</span> <span class="token function">install</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="syntax" tabindex="-1"><a class="header-anchor" href="#syntax" aria-hidden="true">#</a> Syntax</h2>`,7),y={id:"array",tabindex:"-1"},w=e("a",{class:"header-anchor",href:"#array","aria-hidden":"true"},"#",-1),E={href:"https://wiki.bash-hackers.org/syntax/arrays",target:"_blank",rel:"noopener noreferrer"},q={id:"expansions-and-substitutions",tabindex:"-1"},S=e("a",{class:"header-anchor",href:"#expansions-and-substitutions","aria-hidden":"true"},"#",-1),$={href:"https://wiki.bash-hackers.org/syntax/expansion/intro",target:"_blank",rel:"noopener noreferrer"},T=e("h2",{id:"man-命令",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#man-命令","aria-hidden":"true"},"#"),s(" man 命令")],-1),C={id:"man-doesn-t-work-on-ubuntu-18-04",tabindex:"-1"},I=e("a",{class:"header-anchor",href:"#man-doesn-t-work-on-ubuntu-18-04","aria-hidden":"true"},"#",-1),N={href:"https://askubuntu.com/questions/1228660/man-doesnt-work-on-ubuntu-18-04",target:"_blank",rel:"noopener noreferrer"},z=t(`<h2 id="bash-中的任务管理工具" tabindex="-1"><a class="header-anchor" href="#bash-中的任务管理工具" aria-hidden="true">#</a> Bash 中的任务管理工具</h2><ul><li><code>Ctrl+Z和Ctrl+C</code>:Ctrl C是强制终止程序的执行并结束进程。而Ctrl Z则只是中断任务的执行，但该任务并没有结束，它只是在进程中维持挂起的状态，用户可以使用<code>fg/bg</code>操作来继续前台/后台执行该任务</li><li><code>&amp;</code></li><li><code>fg</code> 将后台作业移动到前台终端运行</li><li><code>bg</code> 将前台终端作业移动到后台运行</li><li><code>kill</code> 发送信号到进程, <code>kill -l</code>列出所有信号名称,</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">vim</span> <span class="token number">1</span>.txt
<span class="token comment"># 按 Ctrl + Z 挂起任务</span>
<span class="token function">vim</span> <span class="token number">2</span>.txt
<span class="token comment"># 按 Ctrl + Z 挂起任务</span>
<span class="token function">jobs</span> <span class="token parameter variable">-l</span> <span class="token comment"># 显示当前任务以及 pid</span>
<span class="token function">fg</span> %1 <span class="token comment"># 恢复编辑1.txt</span>
<span class="token function">jobs</span> <span class="token parameter variable">-l</span> 
<span class="token function">kill</span> <span class="token parameter variable">-9</span> vim-pid
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="debug-bash" tabindex="-1"><a class="header-anchor" href="#debug-bash" aria-hidden="true">#</a> debug Bash</h2><p><code>bash -x scriptName</code></p><h2 id="奇怪的bug" tabindex="-1"><a class="header-anchor" href="#奇怪的bug" aria-hidden="true">#</a> 奇怪的bug</h2>`,6),A={href:"https://blog.51cto.com/oldboy/588574",target:"_blank",rel:"noopener noreferrer"},L=e("blockquote",null,[e("p",null,"ctl+] 切换 然后quit退出.")],-1),R={id:"linux-防火墙",tabindex:"-1"},B=e("a",{class:"header-anchor",href:"#linux-防火墙","aria-hidden":"true"},"#",-1),F={href:"https://opensource.com/article/18/9/linux-iptables-firewalld",target:"_blank",rel:"noopener noreferrer"},H=e("ul",null,[e("li",null,"firewall: mA firewall is a set of rules. When a data packet moves into or out of a protected network space, its contents (in particular, information about its origin, target, and the protocol it plans to use) are tested against the firewall rules to see if it should be allowed through"),e("li",null,"iptables: is a tool for managing firewall rules on a Linux machine."),e("li",null,"firewalld: is also a tool for managing firewall rules on a Linux machine.")],-1),P={id:"ubuntu-不休眠技巧",tabindex:"-1"},j=e("a",{class:"header-anchor",href:"#ubuntu-不休眠技巧","aria-hidden":"true"},"#",-1),M={href:"https://www.5axxw.com/questions/simple/tf1pgm",target:"_blank",rel:"noopener noreferrer"},U=t(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">vim</span> /etc/systemd/logind.conf
<span class="token comment">#suspend -&gt; ignore</span>
<span class="token comment">#HandleLidSwitch=suspend</span>
<span class="token assign-left variable">HandleLidSwitch</span><span class="token operator">=</span>ignore
<span class="token function">sudo</span> systemctl restart systemd-logind.service
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),Y={id:"ubuntu-静态ip-set-static-ip",tabindex:"-1"},D=e("a",{class:"header-anchor",href:"#ubuntu-静态ip-set-static-ip","aria-hidden":"true"},"#",-1),O={href:"https://www.freecodecamp.org/news/setting-a-static-ip-in-ubuntu-linux-ip-address-tutorial/",target:"_blank",rel:"noopener noreferrer"},V=t(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> /etc/netplan
<span class="token function">vim</span> 00-installer-config-wifi.yaml
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>wifi config yaml file</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">network</span><span class="token punctuation">:</span>
  <span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token number">2</span>
  <span class="token key atrule">wifis</span><span class="token punctuation">:</span>
    <span class="token key atrule">wlp6s0</span><span class="token punctuation">:</span>
      <span class="token key atrule">access-points</span><span class="token punctuation">:</span>
        <span class="token key atrule">CMCC-xiaochenchen</span><span class="token punctuation">:</span>
          <span class="token key atrule">password</span><span class="token punctuation">:</span> t63bu9tn*
      <span class="token key atrule">addresses</span><span class="token punctuation">:</span> <span class="token punctuation">[</span> 192.168.1.5/24 <span class="token punctuation">]</span>
      <span class="token comment"># gateway4: 192.168.1.1</span>
      <span class="token key atrule">routes</span><span class="token punctuation">:</span>
        <span class="token punctuation">-</span> <span class="token key atrule">to</span><span class="token punctuation">:</span> default
          <span class="token key atrule">via</span><span class="token punctuation">:</span> 192.168.1.1
      <span class="token key atrule">nameservers</span><span class="token punctuation">:</span>
        <span class="token key atrule">addresses</span><span class="token punctuation">:</span> <span class="token punctuation">[</span> 8.8.8.8<span class="token punctuation">,</span>8.8.8.4<span class="token punctuation">,</span>114.114.114.114 <span class="token punctuation">]</span>
      <span class="token key atrule">dhcp4</span><span class="token punctuation">:</span> no

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>应用设置：<code>sudo netplan try</code></p>`,4),W={href:"https://unix.stackexchange.com/questions/681220/netplan-generate-gateway4-has-been-deprecated-use-default-routes-instead",target:"_blank",rel:"noopener noreferrer"},Z=e("code",null,"gateway4",-1),G=t(`<h2 id="shell-设置变量默认值" tabindex="-1"><a class="header-anchor" href="#shell-设置变量默认值" aria-hidden="true">#</a> shell 设置变量默认值</h2><p>test.sh,为<code>$1</code> 变量设置默认 tomcat 下载地址</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token shebang important">#!/usr/bin/env bash</span>
<span class="token assign-left variable">downloadUrl</span><span class="token operator">=</span><span class="token variable">\${1<span class="token operator">:-</span>https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>dlcdn.apache.org<span class="token operator">/</span>tomcat<span class="token operator">/</span>tomcat-9<span class="token operator">/</span>v9.0.83<span class="token operator">/</span>bin<span class="token operator">/</span>apache-tomcat-9.0.83.tar.gz}</span>
<span class="token builtin class-name">echo</span> <span class="token string">&quot;downloadUrl is：<span class="token variable">\${downloadUrl}</span>&quot;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>执行 <code>./test.sh http://example.com</code>,则输出 <code>downloadUrl is：http://example.com</code></p><h2 id="echo-叮咚-声音" tabindex="-1"><a class="header-anchor" href="#echo-叮咚-声音" aria-hidden="true">#</a> echo 叮咚 声音</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#\\a     alert (bell)</span>
<span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;<span class="token entity" title="\\a">\\a</span> Ding dong<span class="token entity" title="\\a">\\a</span>&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="特殊字符" tabindex="-1"><a class="header-anchor" href="#特殊字符" aria-hidden="true">#</a> 特殊字符</h2><ul><li><code>\\</code>: You can use the backslash () as last character on line to continue command on next line</li><li><code>$IFS</code>: The Internal Field Separator (IFS)</li></ul>`,8),J={id:"printf-vs-echo",tabindex:"-1"},K=e("a",{class:"header-anchor",href:"#printf-vs-echo","aria-hidden":"true"},"#",-1),Q={href:"https://bash.cyberciti.biz/guide/Echo_Command",target:"_blank",rel:"noopener noreferrer"},X=t(`<h2 id="export" tabindex="-1"><a class="header-anchor" href="#export" aria-hidden="true">#</a> export</h2><p>By default all user defined variables are local. They are not exported to new processes. Use export command to export variables and functions to child processes.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">export</span> <span class="token assign-left variable">backup</span><span class="token operator">=</span><span class="token string">&quot;/nas10/mysql&quot;</span>
<span class="token builtin class-name">echo</span> <span class="token string">&quot;Backup dir <span class="token variable">$backup</span>&quot;</span>
<span class="token function">bash</span> <span class="token comment">#  start a new shell instance, enter: bash</span>
<span class="token builtin class-name">echo</span> <span class="token string">&quot;Backup dir <span class="token variable">$backup</span>&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="here-documents-vs-here-strings" tabindex="-1"><a class="header-anchor" href="#here-documents-vs-here-strings" aria-hidden="true">#</a> HERE DOCUMENTS VS HERE STRINGS</h2><p>here documents:This type of redirection tells the shell to read input from the current source (<code>HERE</code>) until a line containg only word (<code>HERE</code>) is seen. HERE word is not subjected to variable name, parameter expansion, arithmetic expansion, pathname expansion, or command substitution. All of the lines read up to that point are then used as the standard input for a command. Files are processed in this manner are commonly called here documents. If you do not want variable name, parameter expansion, arithmetic expansion, pathname expansion, or command substitution quote <code>HERE</code> in a <strong>single quote</strong></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>command &lt;&lt;HERE
text1
text2
testN
$varName
HERE
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Here strings:The <code>$word</code> (a shell variable) is expanded and supplied to the command on its standard input</p><blockquote><p>command &lt;&lt;&lt;$word</p></blockquote><p>字符串拆分小技巧</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># /etc/passwd </span>
<span class="token assign-left variable">pwd</span><span class="token operator">=</span>zonglinlee:x:1000:1000:zonglinlee:/home/zonglinlee:/bin/bash
<span class="token assign-left variable">oldIFS</span><span class="token operator">=</span><span class="token string">&quot;<span class="token environment constant">$IFS</span>&quot;</span>
<span class="token assign-left variable"><span class="token environment constant">IFS</span></span><span class="token operator">=</span>:
<span class="token builtin class-name">read</span> <span class="token parameter variable">-r</span> login password uid gid info home shell <span class="token operator">&lt;&lt;&lt;</span> <span class="token string">&quot;<span class="token variable">$pwd</span>&quot;</span>
<span class="token builtin class-name">printf</span> <span class="token string">&quot;Your login name is %s, uid %d, gid %d, home dir set to %s with %s as login shell<span class="token entity" title="\\n">\\n</span>&quot;</span> <span class="token variable">$login</span> <span class="token variable">$uid</span> <span class="token variable">$gid</span> <span class="token variable">$home</span> <span class="token variable">$shell</span>
<span class="token assign-left variable"><span class="token environment constant">IFS</span></span><span class="token operator">=</span><span class="token string">&quot;<span class="token variable">$oldIFS</span>&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="bash-variable-existence-check" tabindex="-1"><a class="header-anchor" href="#bash-variable-existence-check" aria-hidden="true">#</a> Bash variable existence check</h2><p>syntax</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>\${varName?Error varName is not defined}
\${varName:?Error varName is not defined or is empty}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>例子</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token shebang important">#!/usr/bin/env bash</span>
<span class="token assign-left variable">path</span><span class="token operator">=</span><span class="token variable">\${1<span class="token operator">:?</span>Error command line argument not passed}</span>
<span class="token builtin class-name">echo</span> <span class="token string">&quot;backup path is <span class="token variable">$path</span>&quot;</span>
<span class="token builtin class-name">echo</span> <span class="token string">&quot;i am done if \\<span class="token variable">$path</span> is set&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,15),ee={id:"shell-startup-script-execution-order",tabindex:"-1"},se=e("a",{class:"header-anchor",href:"#shell-startup-script-execution-order","aria-hidden":"true"},"#",-1),ne={href:"https://bash.cyberciti.biz/guide/Startup_scripts",target:"_blank",rel:"noopener noreferrer"},ae=t("<p><code>/etc/profile</code> - It contains Linux system wide environment and startup programs. This file runs first when a user logs in to the system. This file also act as a system-wide profile file for the bash shell. <code>/etc/profile.d - /etc/profile</code> calls <code>/etc/profile.d/</code>. It is a directory and all scripts in this directory are called by <code>/etc/profile</code> using a <code>for loop</code>. This file runs second when a user logs in. <code>~/.bash_profile</code> or <code>$HOME/.bash_profile</code> - Finally, the file <code>~/.bash_profile</code> is called in the users home directory ( $HOME). This file runs third when a user logs in. This file calls <code>~/.bashrc</code> in the users home directory.</p>",1),te={id:"changing-bash-prompt-参考",tabindex:"-1"},ie=e("a",{class:"header-anchor",href:"#changing-bash-prompt-参考","aria-hidden":"true"},"#",-1),oe={href:"https://bash.cyberciti.biz/guide/Changing_bash_prompt",target:"_blank",rel:"noopener noreferrer"},re={href:"https://www.cyberciti.biz/faq/bash-shell-change-the-color-of-my-shell-prompt-under-linux-or-unix/",target:"_blank",rel:"noopener noreferrer"},le=t(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PS1</span></span><span class="token operator">=</span><span class="token string">&quot;<span class="token entity" title="\\e">\\e</span>[0;31m[<span class="token entity" title="\\e">\\e</span>[m <span class="token entity" title="\\e">\\e</span>[0;33m\\u<span class="token entity" title="\\e">\\e</span>[m@<span class="token entity" title="\\e">\\e</span>[0;34m\\h<span class="token entity" title="\\e">\\e</span>[m <span class="token entity" title="\\e">\\e</span>[0;34m\\w<span class="token entity" title="\\e">\\e</span>[m <span class="token entity" title="\\e">\\e</span>[0;31m]<span class="token entity" title="\\e">\\e</span>[m\\$&quot;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,1),de={id:"dev-null",tabindex:"-1"},ce=e("a",{class:"header-anchor",href:"#dev-null","aria-hidden":"true"},"#",-1),pe={href:"https://unix.stackexchange.com/questions/27955/the-usage-of-dev-null-in-the-command-line/27958#27958",target:"_blank",rel:"noopener noreferrer"},he={id:"dev-urandom",tabindex:"-1"},ue=e("a",{class:"header-anchor",href:"#dev-urandom","aria-hidden":"true"},"#",-1),be={href:"https://linuxhandbook.com/dev-random-urandom/",target:"_blank",rel:"noopener noreferrer"},me=e("p",null,[s("Create a random password "),e("code",null,"tr -dc A-Za-z0-9_ < /dev/urandom | head -c12 | xargs")],-1),ve={id:"ssh隧道",tabindex:"-1"},ge=e("a",{class:"header-anchor",href:"#ssh隧道","aria-hidden":"true"},"#",-1),ke={href:"https://www.lixueduan.com/posts/linux/07-ssh-tunnel/",target:"_blank",rel:"noopener noreferrer"},fe=e("h2",{id:"reference",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#reference","aria-hidden":"true"},"#"),s(" Reference")],-1),_e={href:"https://wangchujiang.com/linux-command/",target:"_blank",rel:"noopener noreferrer"},xe={href:"https://bash.cyberciti.biz/guide/Main_Page",target:"_blank",rel:"noopener noreferrer"},ye={href:"https://explainshell.com/",target:"_blank",rel:"noopener noreferrer"},we={href:"https://dunwu.github.io/linux-tutorial/",target:"_blank",rel:"noopener noreferrer"},Ee={href:"https://github.com/aqzt/kjyw",target:"_blank",rel:"noopener noreferrer"},qe={href:"https://github.com/eryajf/magic-of-sysuse-scripts",target:"_blank",rel:"noopener noreferrer"},Se={href:"https://blog.51cto.com/lizhenliang/classify",target:"_blank",rel:"noopener noreferrer"},$e={href:"https://github.com/snwh/ubuntu-post-install",target:"_blank",rel:"noopener noreferrer"},Te={href:"https://github.com/mritd/shell_scripts",target:"_blank",rel:"noopener noreferrer"},Ce={href:"https://github.com/eryajf/magic-of-sysuse-scripts",target:"_blank",rel:"noopener noreferrer"},Ie={href:"https://github.com/jlevy/the-art-of-command-line/blob/master/README-zh.md",target:"_blank",rel:"noopener noreferrer"},Ne={href:"https://github.com/dylanaraps/pure-bash-bible",target:"_blank",rel:"noopener noreferrer"},ze={href:"https://devhints.io/bash",target:"_blank",rel:"noopener noreferrer"},Ae={href:"https://github.com/bregman-arie/devops-exercises",target:"_blank",rel:"noopener noreferrer"},Le={href:"https://github.com/bregman-arie/devops-resources/blob/master/resources/bash.md",target:"_blank",rel:"noopener noreferrer"},Re={href:"https://github.com/bregman-arie/devops-exercises/blob/master/exercises/shell/README.md",target:"_blank",rel:"noopener noreferrer"},Be={href:"https://github.com/bregman-arie/devops-resources/blob/master/resources/linux.md",target:"_blank",rel:"noopener noreferrer"},Fe={href:"https://github.com/bregman-arie/devops-exercises/blob/master/exercises/linux/README.md",target:"_blank",rel:"noopener noreferrer"},He={href:"https://wxsm.space/2021/windows-idea-cygwin/",target:"_blank",rel:"noopener noreferrer"},Pe={href:"https://opensource.com/article/20/6/bash-source-command",target:"_blank",rel:"noopener noreferrer"};function je(Me,Ue){const n=o("ExternalLinkIcon");return r(),l("div",null,[e("h2",c,[p,s(),e("a",h,[s("Rufus"),a(n)])]),u,e("h2",b,[m,s(),e("a",v,[s("Windows上的shell脚本在Linux上执行不了"),a(n)])]),g,e("h3",k,[f,s(),e("a",_,[s("apt-vs-dpkg-debian"),a(n)])]),x,e("h3",y,[w,s(),e("a",E,[s("Array"),a(n)])]),e("h3",q,[S,s(),e("a",$,[s("Expansions and substitutions"),a(n)])]),T,e("h3",C,[I,s(),e("a",N,[s("Man doesn't work on Ubuntu 18.04"),a(n)])]),z,e("ul",null,[e("li",null,[e("a",A,[s("telnet命令后无法退出的解决"),a(n)])])]),L,e("h2",R,[B,s(),e("a",F,[s("linux 防火墙"),a(n)])]),H,e("h2",P,[j,s(),e("a",M,[s("ubuntu 不休眠技巧"),a(n)])]),U,e("h2",Y,[D,s(),e("a",O,[s("ubuntu 静态IP（set static ip）"),a(n)])]),V,e("p",null,[e("a",W,[Z,s(" has been deprecated"),a(n)])]),G,e("h2",J,[K,s(),e("a",Q,[s("printf vs echo"),a(n)])]),X,e("h2",ee,[se,s(),e("a",ne,[s("shell startup Script Execution Order"),a(n)])]),ae,e("h2",te,[ie,s(),e("a",oe,[s("Changing bash prompt"),a(n)]),s(),e("a",re,[s("参考"),a(n)])]),le,e("h2",de,[ce,s(),e("a",pe,[s("< /dev/null"),a(n)])]),e("h2",he,[ue,s(),e("a",be,[s("< /dev/urandom"),a(n)])]),me,e("h2",ve,[ge,s(),e("a",ke,[s("ssh隧道"),a(n)])]),fe,e("ul",null,[e("li",null,[e("a",_e,[s("linux command"),a(n)])]),e("li",null,[e("a",xe,[s("Linux Bash Shell Scripting Tutorial Wiki"),a(n)])]),e("li",null,[e("a",ye,[s("explain-shell"),a(n)])]),e("li",null,[e("a",we,[s("https://dunwu.github.io/linux-tutorial/"),a(n)])]),e("li",null,[e("a",Ee,[s("kjyw 快捷运维"),a(n)])]),e("li",null,[e("a",qe,[s("magic-of-sysuse-scripts"),a(n)])]),e("li",null,[e("a",Se,[s("18个Linux Shell脚本经典案例(bilibili)"),a(n)])]),e("li",null,[e("a",$e,[s("Ubuntu Post Install Scripts"),a(n)])]),e("li",null,[e("a",Te,[s("shell_scripts"),a(n)])]),e("li",null,[e("a",Ce,[s(" 运维外挂小工具"),a(n)])]),e("li",null,[e("a",Ie,[s("The-art-of-command-line"),a(n)])]),e("li",null,[e("a",Ne,[s("pure-bash-bible"),a(n)])]),e("li",null,[e("a",ze,[s("Bash scripting cheatsheet"),a(n)])]),e("li",null,[e("a",Ae,[s("devops-exercises"),a(n)])]),e("li",null,[e("a",Le,[s("devops-resources | bash"),a(n)])]),e("li",null,[e("a",Re,[s("devops-exercises | bash"),a(n)])]),e("li",null,[e("a",Be,[s("devops-resources | linux"),a(n)])]),e("li",null,[e("a",Fe,[s("devops-exercises | linux"),a(n)])]),e("li",null,[e("a",He,[s("在 Windows 中使用 Cygwin"),a(n)])]),e("li",null,[e("a",Pe,[s("bash-source-command"),a(n)])])])])}const De=i(d,[["render",je],["__file","/home/runner/work/vuepress_blog/vuepress_blog/docs/.vuepress/.temp/pages/shell/shell.html.vue"]]);export{De as default};
